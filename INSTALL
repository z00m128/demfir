DEMFIR build:

If you downloaded some "stable" release, you can skip to "Builded DEMFIR can be
installed..." - all files are created.

Needed SW
- Linux or Unix, maybe some unix-like enviroment (MinGW etc.)
- System progs cat, grep, tr, make, bash compatible shell
- mkisofs (package cdrtools [http://www.fokus.gmd.de/research/cc/glone/employees/joerg.schilling/private/mkisofs.html])
- Macroassembler AS [http://john.ccac.rwth-aachen.de:8000/as/] (version 1.42 at
  least, DEMFIR _CANNOT_ be build with version 1.41rX
- Small utility bin2tap [http://zeroteam.sk/bin2tap.html]

Check config.a80 and select prefered features.
In demfir directory type 'make' and build should be done automatically.
All generated files can be deleted with "make clean".



Builded DEMFIR can be install in three ways:

1) Use ROM image (demfirXXXX_E.bin) and burn it with Zilog's permutor to EPROM
   or use some universal ROM installer and install it to FLASH ROM of divIDE.

2) Use .tap file (demfirXXXX.tap), which contains Zilog's universal installer
   and load it from tape. It automatically installs DEMFIR.

3) Use ISO image (demfirXXXX.iso), burn it to RW or store it to CF, ZIPdrive or
   HDD. Insert this medium into DEMFIR, select .tap file (stored on ISO
   filesystem) and run it (LOAD ""). This way need working DEMFIR so can be
   used only for upgrade.


Since version 0.6 DMFIR takes two memory pages. It brings two demands:

1) It can't run in MAPRAM and _MUST_ be loaded into EEPROM. MAPRAM _HAVE_NOT_
   be active before booting second part. Used Zilog's flasher turn MAPRAM on
   every time (even if fashing EEPROM) so after EEPROM flash ZXS have to be
   turned off and on (the only way how turn MAPRAM off).

2) After every turn on of ZXS is necessary to boot up second part. Until that
   will not work tape emulator, cd browser and its parts (snap runners).
   Booting is done from first avaiable ISO image which contain second part as
   "generic boot image" (i.e. demfirXXXX_R.bin placed from image's first sector)
   or demfirboot.img used in El Torito (standard bootable CD). Supplied or
   builded (by make) ISO image (demfirXXXX.iso) is created as bootable and can
   be used for booting. The colour of DEMFIR version is red until successful
   boot then turn to green. Version of both parts is compared during boot and
   when doesn't match boot is not successful. It's important during DEMFIR
   upgrade via DEMFIR (way 3). Recommended way: use different media, devices or
   two ISO images one after another (first with currently installed version to
   boot from and second to upgrade).


Press NMI. It detects IDE devices. Let it search for boot image (if it's not at
beginning of media) and you can start your work.



How to build own bootable CD:

1) In K3b, Nero or similar "user friendly" program use file demfirboot.img as
   floppy image and create standard bootable CD (file demfirboot.img is
   generated by 'make eltorito' or 'make demfirboot.img', "stable" release
   should contain it).

2) mkisofs users have two options
   a) "generic boot image" - faster and smaller one:
      mkisofs -U -V "CD_NAME" -G demfirXXXX_R.bin -o image.iso FILES_TO_CD
   b) El Torito as in 1:
      mkisofs -U -V "CD_NAME" -b demfirboot.img -hide demfirboot.img -hide boot.catalog -o image.iso demfirboot.img FILES_TO_CD
   See mkisofs's manual for description of these options.
